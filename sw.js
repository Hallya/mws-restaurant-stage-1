const window=require("../node_modules/window-or-global/lib/index"),version=new Date,CURRENT_CACHES={CACHE_STATIC:"static-cache-"+version,CACHE_MAP:"map-api-1",CACHE_FONT:"google-fonts-1"},URLS_TO_CACHE=["index.html","manifest.webmanifest","restaurant.html","assets/css/fonts/iconicfill.woff2","assets/css/fonts/fontawesome.woff2","assets/img/svg/puff.svg","assets/img/png/launchScreen-ipad-9.7.png","assets/img/png/launchScreen-ipadpro-10.5.png","assets/img/png/launchScreen-ipadpro-12.9.png","assets/img/png/launchScreen-iphone-8.png","assets/img/png/launchScreen-iphone-8plus.png","assets/img/png/launchScreen-iphone-x.png","assets/img/png/launchScreen-iphone-se.png","assets/img/png/logo-64.png","assets/img/png/logo-128.png","assets/img/png/logo-256.png","assets/img/png/logo-512.png","assets/css/index.css","assets/css/restaurant_info.css","js/main.js","js/restaurant_info.js"];self.addEventListener("install",e=>{console.log(`- Cache version : "${CACHE_STATIC}"`),e.waitUntil(caches.open(CURRENT_CACHES.CACHE_STATIC).then(e=>e.addAll(URLS_TO_CACHE)).then(()=>{console.log("- All resources cached."),self.skipWaiting(),console.log("- SW version skipped.")}).catch(e=>console.error("Open cache failed :",e)))}),self.addEventListener("activate",e=>{const s=Object.keys(CURRENT_CACHES).map(e=>CURRENT_CACHES[e]);e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(-1==s.indexOf(e))return console.log("- Deleting",e),caches.delete(e)}))).then(()=>console.log(`- "${CURRENT_CACHES.CACHE_STATIC}" now ready to handle fetches!`)))}),self.addEventListener("fetch",e=>{const s=new URL(e.request.url),n=window.location;switch(s.hostname){case"maps.gstatic.com":e.respondWith(caches.open(CURRENT_CACHES.CACHE_MAP).then(n=>n.match(e.request).then(e=>e||fetch(s.href,{mode:"no-cors"})).then(s=>(n.put(e.request,s.clone()),s),e=>console.error(e))));break;case"fonts.gstatic.com":e.respondWith(caches.open(CURRENT_CACHES.CACHE_FONT).then(n=>n.match(e.request).then(e=>e||fetch(s.href)).then(s=>(n.put(e.request,s.clone()),s),e=>console.error(e))));break;case n.hostname:if(s.pathname.startsWith("restaurant.html")){const n=s.href.replace(/[?&]id=\d/,"");e.respondWith(caches.open(CURRENT_CACHES.CACHE_STATIC).then(s=>s.match(n).then(s=>s||fetch(e.request)).then(e=>(s.put(n,e.clone()),e),e=>console.error(e))))}else s.pathname.endsWith("restaurants.json")?e.respondWith(fetch(e.request)):e.respondWith(caches.open(CURRENT_CACHES.CACHE_STATIC).then(t=>t.match(e.request).then(s=>s||fetch(e.request)).then(o=>200===o.status?(t.put(e.request,o.clone()),o):s.pathname.indexOf("assets/img/")>-1?void t.match(`${n.hostname}'/assets/img/svg/puff.svg`):o,e=>console.error("error :",e)),e=>console.error("Error: ",e)));break;default:e.respondWith(fetch(e.request))}});