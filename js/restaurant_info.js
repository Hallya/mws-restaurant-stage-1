'use strict';

/* global DBHelper */

var restaurant;
var map;

if ('serviceWorker' in navigator) {
  window.addEventListener('load', function () {
    navigator.serviceWorker.register('sw.js').then(function (registration) {
      console.log('registration to serviceWorker complete with scope :', registration.scope);
    });
  });
  navigator.serviceWorker.addEventListener('message', function (event) {
    if (event.data.message === 'confirmed') {
      DBHelper.switchLoaderToMap();
      console.log('Switch done');
    }
  });
}
/**
 * Initialize Google map, called from HTML.
 */
window.initMap = function () {
  fetchRestaurantFromURL().then(function (restaurant) {
    self.map = new google.maps.Map(document.getElementById('map'), {
      zoom: 16,
      center: restaurant.latlng,
      scrollwheel: false
    });
    self.map.addListener('idle', function () {
      DBHelper.switchLoaderToMap();
    });
    DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);
    fillBreadcrumb();
  });
};

/**
 * Get current restaurant from page URL.
 */
var fetchRestaurantFromURL = function fetchRestaurantFromURL() {
  if (self.restaurant) {
    // restaurant already fetched!
    return;
  }
  var id = getParameterByName('id');
  if (!id) {
    // no id found in URL
    return console.error('No restaurant id in URL');
  }
  return DBHelper.fetchRestaurantById(id).then(function (restaurant) {
    return self.restaurant = restaurant;
  }).then(fillRestaurantHTML).catch(function (error) {
    return console.error(error);
  });
};

/**
 * Create restaurant HTML and add it to the webpage
 */
var fillRestaurantHTML = function fillRestaurantHTML() {
  var restaurant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant;

  var name = document.getElementById('restaurant-name');
  name.innerHTML = restaurant.name;

  var address = document.getElementById('restaurant-address');
  address.innerHTML = restaurant.address;
  address.setAttribute('aria-label', 'located at ' + restaurant.address);

  var source = document.getElementById('restaurant-source');
  var sourceWebp = document.getElementById('restaurant-sourceWebp');
  sourceWebp.srcset = DBHelper.imageWebpUrlForRestaurant(restaurant) + '-large_x1.webp 1x, ' + DBHelper.imageWebpUrlForRestaurant(restaurant) + '-large_x2.webp 2x';
  sourceWebp.media = '(min-width: 1000px)';
  sourceWebp.type = 'image/webp';
  source.srcset = DBHelper.imageUrlForRestaurant(restaurant) + '-large_x1.jpg 1x, ' + DBHelper.imageUrlForRestaurant(restaurant) + '-large_x2.jpg 2x';
  source.media = '(min-width: 1000px)';
  source.type = 'image/jpeg';

  var ndSource = document.getElementById('restaurant-ndSource');
  var ndSourceWebp = document.getElementById('restaurant-ndSourceWebp');
  ndSourceWebp.srcset = DBHelper.imageWebpUrlForRestaurant(restaurant) + '-medium_x1.webp 1x, ' + DBHelper.imageWebpUrlForRestaurant(restaurant) + '-medium_x2.webp 2x';
  ndSourceWebp.media = '(min-width: 420px)';
  ndSourceWebp.type = 'image/webp';
  ndSource.srcset = DBHelper.imageUrlForRestaurant(restaurant) + '-medium_x1.jpg 1x, ' + DBHelper.imageUrlForRestaurant(restaurant) + '-medium_x2.jpg 2x';
  ndSource.media = '(min-width: 420px)';
  ndSource.type = 'image/jpeg';

  var thSource = document.getElementById('restaurant-thSource');
  var thSourceWebp = document.getElementById('restaurant-thSourceWebp');
  thSourceWebp.srcset = DBHelper.imageWebpUrlForRestaurant(restaurant) + '-small_x2.webp 2x, ' + DBHelper.imageWebpUrlForRestaurant(restaurant) + '-small_x1.webp 1x';
  thSourceWebp.media = '(min-width: 320px)';
  thSourceWebp.type = 'image/webp';
  thSource.srcset = DBHelper.imageUrlForRestaurant(restaurant) + '-small_x2.jpg 2x, ' + DBHelper.imageUrlForRestaurant(restaurant) + '-small_x1.jpg 1x';
  thSource.media = '(min-width: 320px)';
  thSource.type = 'image/jpeg';

  var image = document.getElementById('restaurant-img');
  image.className = 'restaurant-img';
  image.src = DBHelper.imageUrlForRestaurant(restaurant) + '-large_x1.jpg';
  image.setAttribute('sizes', '(max-width: 1100px) 85vw, (min-width: 1101px) 990px');
  image.alt = restaurant.name + '\'s  restaurant';
  image.type = 'image/jpeg';

  var cuisine = document.getElementById('restaurant-cuisine');
  cuisine.innerHTML = restaurant.cuisine_type;
  var labelFoodType = document.createElement('label');
  labelFoodType.innerHTML = restaurant.cuisine_type + ' food';
  labelFoodType.setAttribute('hidden', 'hidden');
  labelFoodType.id = 'foodType';
  cuisine.parentNode.insertBefore(labelFoodType, cuisine.nextSibling);

  // fill operating hours
  if (restaurant.operating_hours) {
    fillRestaurantHoursHTML();
  }
  // fill reviews
  fillReviewsHTML();
  return restaurant;
};

/**
 * Create restaurant operating hours HTML table and add it to the webpage.
 */
var fillRestaurantHoursHTML = function fillRestaurantHoursHTML() {
  var operatingHours = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant.operating_hours;

  var hours = document.getElementById('restaurant-hours');
  for (var key in operatingHours) {
    var row = document.createElement('tr');

    var day = document.createElement('td');
    day.innerHTML = key;
    day.setAttribute('aria-label', 'open on ' + key);
    row.appendChild(day);

    var time = document.createElement('td');
    time.innerHTML = operatingHours[key];
    time.setAttribute('aria-label', operatingHours[key] + ',');
    row.appendChild(time);
    row.setAttribute('role', 'row');
    hours.appendChild(row);
  }
};

/**
 * Create all reviews HTML and add them to the webpage.
 */
var fillReviewsHTML = function fillReviewsHTML() {
  var reviews = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant.reviews;

  var container = document.getElementById('reviews-container');
  var title = document.createElement('h3');
  title.innerHTML = 'Reviews';
  container.appendChild(title);

  if (!reviews) {
    var noReviews = document.createElement('p');
    noReviews.innerHTML = 'No reviews yet!';
    container.appendChild(noReviews);
    return;
  }
  var ul = document.getElementById('reviews-list');
  reviews.forEach(function (review) {
    ul.appendChild(createReviewHTML(review));
  });
  container.appendChild(ul);
};

/**
 * Create review HTML and add it to the webpage.
 */
var createReviewHTML = function createReviewHTML(review) {
  var li = document.createElement('li');
  var name = document.createElement('p');
  name.className = 'userName';
  name.innerHTML = review.name;
  name.setAttribute('aria-label', review.name + ',');
  li.appendChild(name);

  var date = document.createElement('p');
  date.className = 'dateReview';
  date.innerHTML = review.date;
  date.setAttribute('aria-label', review.date + ',');
  li.appendChild(date);

  var rating = document.createElement('p');
  var stars = document.createElement('span');
  rating.className = 'userRating';
  stars.className = 'ratingStars';
  for (var i = 0; i < review.rating; i++) {
    stars.innerHTML += 'â˜…';
  }
  stars.setAttribute('aria-label', review.rating + ' stars on 5,');
  rating.innerHTML = 'Rating: ';
  rating.appendChild(stars);
  li.appendChild(rating);

  var comments = document.createElement('p');
  comments.className = 'userComments';
  comments.innerHTML = review.comments;
  li.appendChild(comments);

  li.setAttribute('role', 'listitem');
  li.setAttribute('aria-setsize', self.restaurant.reviews.length);
  li.setAttribute('aria-posinset', self.restaurant.reviews.indexOf(review) + 1);
  return li;
};

/**
 * Add restaurant name to the breadcrumb navigation menu
 */
var fillBreadcrumb = function fillBreadcrumb() {
  var restaurant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant;

  var breadcrumb = document.getElementById('breadcrumb');
  var li = document.createElement('li');
  li.innerHTML = ' ' + restaurant.name;
  li.className = 'fontawesome-arrow-right';
  li.setAttribute('aria-current', 'page');
  breadcrumb.appendChild(li);
};

/**
 * Get a parameter by name from page URL.
 */
var getParameterByName = function getParameterByName(name, url) {
  if (!url) url = window.location.href;
  name = name.replace(/[\[\]]/g, '\\$&');
  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
      results = regex.exec(url);
  if (!results) return null;
  if (!results[2]) return '';
  return decodeURIComponent(results[2].replace(/\+/g, ' '));
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3RhdXJhbnRfaW5mby5qcyJdLCJuYW1lcyI6WyJyZXN0YXVyYW50IiwibWFwIiwibmF2aWdhdG9yIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsInNlcnZpY2VXb3JrZXIiLCJyZWdpc3RlciIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwicmVnaXN0cmF0aW9uIiwic2NvcGUiLCJldmVudCIsImRhdGEiLCJtZXNzYWdlIiwiREJIZWxwZXIiLCJzd2l0Y2hMb2FkZXJUb01hcCIsImluaXRNYXAiLCJmZXRjaFJlc3RhdXJhbnRGcm9tVVJMIiwic2VsZiIsImdvb2dsZSIsIm1hcHMiLCJNYXAiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiem9vbSIsImNlbnRlciIsImxhdGxuZyIsInNjcm9sbHdoZWVsIiwiYWRkTGlzdGVuZXIiLCJtYXBNYXJrZXJGb3JSZXN0YXVyYW50IiwiZmlsbEJyZWFkY3J1bWIiLCJpZCIsImdldFBhcmFtZXRlckJ5TmFtZSIsImVycm9yIiwiZmV0Y2hSZXN0YXVyYW50QnlJZCIsImZpbGxSZXN0YXVyYW50SFRNTCIsImNhdGNoIiwibmFtZSIsImlubmVySFRNTCIsImFkZHJlc3MiLCJzZXRBdHRyaWJ1dGUiLCJzb3VyY2UiLCJzb3VyY2VXZWJwIiwic3Jjc2V0IiwiaW1hZ2VXZWJwVXJsRm9yUmVzdGF1cmFudCIsIm1lZGlhIiwidHlwZSIsImltYWdlVXJsRm9yUmVzdGF1cmFudCIsIm5kU291cmNlIiwibmRTb3VyY2VXZWJwIiwidGhTb3VyY2UiLCJ0aFNvdXJjZVdlYnAiLCJpbWFnZSIsImNsYXNzTmFtZSIsInNyYyIsImFsdCIsImN1aXNpbmUiLCJjdWlzaW5lX3R5cGUiLCJsYWJlbEZvb2RUeXBlIiwiY3JlYXRlRWxlbWVudCIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJuZXh0U2libGluZyIsIm9wZXJhdGluZ19ob3VycyIsImZpbGxSZXN0YXVyYW50SG91cnNIVE1MIiwiZmlsbFJldmlld3NIVE1MIiwib3BlcmF0aW5nSG91cnMiLCJob3VycyIsImtleSIsInJvdyIsImRheSIsImFwcGVuZENoaWxkIiwidGltZSIsInJldmlld3MiLCJjb250YWluZXIiLCJ0aXRsZSIsIm5vUmV2aWV3cyIsInVsIiwiZm9yRWFjaCIsImNyZWF0ZVJldmlld0hUTUwiLCJyZXZpZXciLCJsaSIsImRhdGUiLCJyYXRpbmciLCJzdGFycyIsImkiLCJjb21tZW50cyIsImxlbmd0aCIsImluZGV4T2YiLCJicmVhZGNydW1iIiwidXJsIiwibG9jYXRpb24iLCJocmVmIiwicmVwbGFjZSIsInJlZ2V4IiwiUmVnRXhwIiwicmVzdWx0cyIsImV4ZWMiLCJkZWNvZGVVUklDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUEsSUFBSUEsVUFBSjtBQUNBLElBQUlDLEdBQUo7O0FBRUEsSUFBSSxtQkFBbUJDLFNBQXZCLEVBQWtDO0FBQ2hDQyxTQUFPQyxnQkFBUCxDQUF3QixNQUF4QixFQUFnQyxZQUFNO0FBQ3BDRixjQUFVRyxhQUFWLENBQXdCQyxRQUF4QixDQUFpQyxPQUFqQyxFQUEwQ0MsSUFBMUMsQ0FBK0Msd0JBQWdCO0FBQzdEQyxjQUFRQyxHQUFSLENBQVkscURBQVosRUFBbUVDLGFBQWFDLEtBQWhGO0FBQ0QsS0FGRDtBQUdELEdBSkQ7QUFLQVQsWUFBVUcsYUFBVixDQUF3QkQsZ0JBQXhCLENBQXlDLFNBQXpDLEVBQW9ELFVBQUNRLEtBQUQsRUFBVztBQUM3RCxRQUFJQSxNQUFNQyxJQUFOLENBQVdDLE9BQVgsS0FBdUIsV0FBM0IsRUFBd0M7QUFDdENDLGVBQVNDLGlCQUFUO0FBQ0FSLGNBQVFDLEdBQVIsQ0FBWSxhQUFaO0FBQ0Q7QUFDRixHQUxEO0FBTUQ7QUFDRDs7O0FBR0FOLE9BQU9jLE9BQVAsR0FBaUIsWUFBTTtBQUNyQkMsMkJBQ0dYLElBREgsQ0FDUSxzQkFBYztBQUNsQlksU0FBS2xCLEdBQUwsR0FBVyxJQUFJbUIsT0FBT0MsSUFBUCxDQUFZQyxHQUFoQixDQUFvQkMsU0FBU0MsY0FBVCxD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QUFQO0FBQ0QsQ0FuQ0Q7O0FBcUNBOzs7QUFHQSxJQUFNbkQsaUJBQWlCLFNBQWpCQSxjQUFpQixHQUFrQztBQUFBLE1BQWpDL0IsVUFBaUMsdUVBQXBCbUIsS0FBS25CLFVBQWU7O0FBQ3ZELE1BQU0wRixhQUFhbkUsU0FBU0MsY0FBVCxDQUF3QixZQUF4QixDQUFuQjtBQUNBLE1BQU0wRCxLQUFLM0QsU0FBU3FDLGFBQVQsQ0FBdUIsSUFBdkIsQ0FBWDtBQUNBc0IsS0FBRzNDLFNBQUgsU0FBbUJ2QyxXQUFXc0MsSUFBOUI7QUFDQTRDLEtBQUc1QixTQUFILEdBQWUseUJBQWY7QUFDQTRCLEtBQUd6QyxZQUFILENBQWdCLGNBQWhCLEVBQWdDLE1BQWhDO0FBQ0FpRCxhQUFXbEIsV0FBWCxDQUF1QlUsRUFBdkI7QUFDRCxDQVBEOztBQVNBOzs7QUFHQSxJQUFNakQscUJBQXFCLFNBQXJCQSxrQkFBcUIsQ0FBQ0ssSUFBRCxFQUFPcUQsR0FBUCxFQUFlO0FBQ3hDLE1BQUksQ0FBQ0EsR0FBTCxFQUNFQSxNQUFNeEYsT0FBT3lGLFFBQVAsQ0FBZ0JDLElBQXRCO0FBQ0Z2RCxTQUFPQSxLQUFLd0QsT0FBTCxDQUFhLFNBQWIsRUFBd0IsTUFBeEIsQ0FBUDtBQUNBLE1BQU1DLFFBQVEsSUFBSUMsTUFBSixVQUFrQjFELElBQWxCLHVCQUFkO0FBQUEsTUFDRTJELFVBQVVGLE1BQU1HLElBQU4sQ0FBV1AsR0FBWCxDQURaO0FBRUEsTUFBSSxDQUFDTSxPQUFMLEVBQ0UsT0FBTyxJQUFQO0FBQ0YsTUFBSSxDQUFDQSxRQUFRLENBQVIsQ0FBTCxFQUNFLE9BQU8sRUFBUDtBQUNGLFNBQU9FLG1CQUFtQkYsUUFBUSxDQUFSLEVBQVdILE9BQVgsQ0FBbUIsS0FBbkIsRUFBMEIsR0FBMUIsQ0FBbkIsQ0FBUDtBQUNELENBWEQiLCJmaWxlIjoicmVzdGF1cmFudF9pbmZvLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIERCSGVscGVyICovXG5cbnZhciByZXN0YXVyYW50O1xudmFyIG1hcDtcblxuaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoJ3N3LmpzJykudGhlbihyZWdpc3RyYXRpb24gPT4ge1xuICAgICAgY29uc29sZS5sb2coJ3JlZ2lzdHJhdGlvbiB0byBzZXJ2aWNlV29ya2VyIGNvbXBsZXRlIHdpdGggc2NvcGUgOicsIHJlZ2lzdHJhdGlvbi5zY29wZSk7XG4gICAgfSk7XG4gIH0pO1xuICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgKGV2ZW50KSA9PiB7XG4gICAgaWYgKGV2ZW50LmRhdGEubWVzc2FnZSA9PT0gJ2NvbmZpcm1lZCcpIHtcbiAgICAgIERCSGVscGVyLnN3aXRjaExvYWRlclRvTWFwKCk7XG4gICAgICBjb25zb2xlLmxvZygnU3dpdGNoIGRvbmUnKTtcbiAgICB9XG4gIH0pO1xufVxuLyoqXG4gKiBJbml0aWFsaXplIEdvb2dsZSBtYXAsIGNhbGxlZCBmcm9tIEhUTUwuXG4gKi9cbndpbmRvdy5pbml0TWFwID0gKCkgPT4ge1xuICBmZXRjaFJlc3RhdXJhbnRGcm9tVVJMKClcbiAgICAudGhlbihyZXN0YXVyYW50ID0+IHtcbiAgICAgIHNlbGYubWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyksIHtcbiAgICAgICAgem9vbTogMTYsXG4gICAgICAgIGNlbnRlcjogcmVzdGF1cmFudC5sYXRsbmcsXG4gICAgICAgIHNjcm9sbHdoZWVsOiBmYWxzZVxuICAgICAgfSk7XG4gICAgICBzZWxmLm1hcC5hZGRMaXN0ZW5lcignaWRsZScsICgpID0+IHtcbiAgICAgICAgREJIZWxwZXIuc3dpdGNoTG9hZGVyVG9NYXAoKTtcbiAgICAgIH0pO1xuICAgICAgREJIZWxwZXIubWFwTWFya2VyRm9yUmVzdGF1cmFudChzZWxmLnJlc3RhdXJhbnQsIHNlbGYubWFwKTtcbiAgICAgIGZpbGxCcmVhZGNydW1iKCk7XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIEdldCBjdXJyZW50IHJlc3RhdXJhbnQgZnJvbSBwYWdlIFVSTC5cbiAqL1xuY29uc3QgZmV0Y2hSZXN0YXVyYW50RnJvbVVSTCA9ICgpID0+IHtcbiAgaWYgKHNlbGYucmVzdGF1cmFudCkgeyAvLyByZXN0YXVyYW50IGFscmVhZHkgZmV0Y2hlZCFcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgaWQgPSBnZXRQYXJhbWV0ZXJCeU5hbWUoJ2lkJyk7XG4gIGlmICghaWQpIHsgLy8gbm8gaWQgZm91bmQgaW4gVVJMXG4gICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoJ05vIHJlc3RhdXJhbnQgaWQgaW4gVVJMJyk7XG4gIH1cbiAgcmV0dXJuIERCSGVscGVyLmZldGNoUmVzdGF1cmFudEJ5SWQoaWQpXG4gICAgLnRoZW4ocmVzdGF1cmFudCA9PiBzZWxmLnJlc3RhdXJhbnQgPSByZXN0YXVyYW50KVxuICAgIC50aGVuKGZpbGxSZXN0YXVyYW50SFRNTClcbiAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgcmVzdGF1cmFudCBIVE1MIGFuZCBhZGQgaXQgdG8gdGhlIHdlYnBhZ2VcbiAqL1xuY29uc3QgZmlsbFJlc3RhdXJhbnRIVE1MID0gKHJlc3RhdXJhbnQgPSBzZWxmLnJlc3RhdXJhbnQpID0+IHtcbiAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LW5hbWUnKTtcbiAgbmFtZS5pbm5lckhUTUwgPSByZXN0YXVyYW50Lm5hbWU7XG5cbiAgY29uc3QgYWRkcmVzcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LWFkZHJlc3MnKTtcbiAgYWRkcmVzcy5pbm5lckhUTUwgPSByZXN0YXVyYW50LmFkZHJlc3M7XG4gIGFkZHJlc3Muc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgYGxvY2F0ZWQgYXQgJHtyZXN0YXVyYW50LmFkZHJlc3N9YCk7XG5cbiAgY29uc3Qgc291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtc291cmNlJyk7XG4gIGNvbnN0IHNvdXJjZVdlYnAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1zb3VyY2VXZWJwJyk7XG4gIHNvdXJjZVdlYnAuc3Jjc2V0ID0gYCR7REJIZWxwZXIuaW1hZ2VXZWJwVXJsRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KX0tbGFyZ2VfeDEud2VicCAxeCwgJHtEQkhlbHBlci5pbWFnZVdlYnBVcmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpfS1sYXJnZV94Mi53ZWJwIDJ4YDtcbiAgc291cmNlV2VicC5tZWRpYSA9ICcobWluLXdpZHRoOiAxMDAwcHgpJztcbiAgc291cmNlV2VicC50eXBlID0gJ2ltYWdlL3dlYnAnO1xuICBzb3VyY2Uuc3Jjc2V0ID0gYCR7REJIZWxwZXIuaW1hZ2VVcmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpfS1sYXJnZV94MS5qcGcgMXgsICR7REJIZWxwZXIuaW1hZ2VVcmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpfS1sYXJnZV94Mi5qcGcgMnhgO1xuICBzb3VyY2UubWVkaWEgPSAnKG1pbi13aWR0aDogMTAwMHB4KSc7XG4gIHNvdXJjZS50eXBlID0gJ2ltYWdlL2pwZWcnO1xuICBcbiAgY29uc3QgbmRTb3VyY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1uZFNvdXJjZScpO1xuICBjb25zdCBuZFNvdXJjZVdlYnAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1uZFNvdXJjZVdlYnAnKTtcbiAgbmRTb3VyY2VXZWJwLnNyY3NldCA9IGAke0RCSGVscGVyLmltYWdlV2VicFVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCl9LW1lZGl1bV94MS53ZWJwIDF4LCAke0RCSGVscGVyLmltYWdlV2VicFVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCl9LW1lZGl1bV94Mi53ZWJwIDJ4YDtcbiAgbmRTb3VyY2VXZWJwLm1lZGlhID0gJyhtaW4td2lkdGg6IDQyMHB4KSc7XG4gIG5kU291cmNlV2VicC50eXBlID0gJ2ltYWdlL3dlYnAnO1xuICBuZFNvdXJjZS5zcmNzZXQgPSBgJHtEQkhlbHBlci5pbWFnZVVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCl9LW1lZGl1bV94MS5qcGcgMXgsICR7REJIZWxwZXIuaW1hZ2VVcmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpfS1tZWRpdW1feDIuanBnIDJ4YDtcbiAgbmRTb3VyY2UubWVkaWEgPSAnKG1pbi13aWR0aDogNDIwcHgpJztcbiAgbmRTb3VyY2UudHlwZSA9ICdpbWFnZS9qcGVnJztcbiAgXG4gIGNvbnN0IHRoU291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtdGhTb3VyY2UnKTtcbiAgY29uc3QgdGhTb3VyY2VXZWJwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtdGhTb3VyY2VXZWJwJyk7XG4gIHRoU291cmNlV2VicC5zcmNzZXQgPSBgJHtEQkhlbHBlci5pbWFnZVdlYnBVcmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpfS1zbWFsbF94Mi53ZWJwIDJ4LCAke0RCSGVscGVyLmltYWdlV2VicFVybEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCl9LXNtYWxsX3gxLndlYnAgMXhgO1xuICB0aFNvdXJjZVdlYnAubWVkaWEgPSAnKG1pbi13aWR0aDogMzIwcHgpJztcbiAgdGhTb3VyY2VXZWJwLnR5cGUgPSAnaW1hZ2Uvd2VicCc7XG4gIHRoU291cmNlLnNyY3NldCA9IGAke0RCSGVscGVyLmltYWdlVXJsRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KX0tc21hbGxfeDIuanBnIDJ4LCAke0RCSGVscGVyLmltYWdlVXJsRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KX0tc21hbGxfeDEuanBnIDF4YDtcbiAgdGhTb3VyY2UubWVkaWEgPSAnKG1pbi13aWR0aDogMzIwcHgpJztcbiAgdGhTb3VyY2UudHlwZSA9ICdpbWFnZS9qcGVnJztcbiAgXG4gIGNvbnN0IGltYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtaW1nJyk7XG4gIGltYWdlLmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50LWltZyc7XG4gIGltYWdlLnNyYyA9IGAke0RCSGVscGVyLmltYWdlVXJsRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KX0tbGFyZ2VfeDEuanBnYDtcbiAgaW1hZ2Uuc2V0QXR0cmlidXRlKCdzaXplcycsICcobWF4LXdpZHRoOiAxMTAwcHgpIDg1dncsIChtaW4td2lkdGg6IDExMDFweCkgOTkwcHgnKTtcbiAgaW1hZ2UuYWx0ID0gYCR7cmVzdGF1cmFudC5uYW1lfSdzICByZXN0YXVyYW50YDtcbiAgaW1hZ2UudHlwZSA9ICdpbWFnZS9qcGVnJztcblxuICBjb25zdCBjdWlzaW5lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtY3Vpc2luZScpO1xuICBjdWlzaW5lLmlubmVySFRNTCA9IHJlc3RhdXJhbnQuY3Vpc2luZV90eXBlO1xuICBjb25zdCBsYWJlbEZvb2RUeXBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgbGFiZWxGb29kVHlwZS5pbm5lckhUTUwgPSBgJHtyZXN0YXVyYW50LmN1aXNpbmVfdHlwZX0gZm9vZGA7XG4gIGxhYmVsRm9vZFR5cGUuc2V0QXR0cmlidXRlKCdoaWRkZW4nLCAnaGlkZGVuJyk7XG4gIGxhYmVsRm9vZFR5cGUuaWQgPSAnZm9vZFR5cGUnO1xuICBjdWlzaW5lLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGxhYmVsRm9vZFR5cGUsIGN1aXNpbmUubmV4dFNpYmxpbmcpO1xuXG4gIC8vIGZpbGwgb3BlcmF0aW5nIGhvdXJzXG4gIGlmIChyZXN0YXVyYW50Lm9wZXJhdGluZ19ob3Vycykge1xuICAgIGZpbGxSZXN0YXVyYW50SG91cnNIVE1MKCk7XG4gIH1cbiAgLy8gZmlsbCByZXZpZXdzXG4gIGZpbGxSZXZpZXdzSFRNTCgpO1xuICByZXR1cm4gcmVzdGF1cmFudDtcbn07XG5cbi8qKlxuICogQ3JlYXRlIHJlc3RhdXJhbnQgb3BlcmF0aW5nIGhvdXJzIEhUTUwgdGFibGUgYW5kIGFkZCBpdCB0byB0aGUgd2VicGFnZS5cbiAqL1xuY29uc3QgZmlsbFJlc3RhdXJhbnRIb3Vyc0hUTUwgPSAob3BlcmF0aW5nSG91cnMgPSBzZWxmLnJlc3RhdXJhbnQub3BlcmF0aW5nX2hvdXJzKSA9PiB7XG4gIGNvbnN0IGhvdXJzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtaG91cnMnKTtcbiAgZm9yIChsZXQga2V5IGluIG9wZXJhdGluZ0hvdXJzKSB7XG4gICAgY29uc3Qgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTtcblxuICAgIGNvbnN0IGRheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG4gICAgZGF5LmlubmVySFRNTCA9IGtleTtcbiAgICBkYXkuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgYG9wZW4gb24gJHtrZXl9YCk7XG4gICAgcm93LmFwcGVuZENoaWxkKGRheSk7XG5cbiAgICBjb25zdCB0aW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcbiAgICB0aW1lLmlubmVySFRNTCA9IG9wZXJhdGluZ0hvdXJzW2tleV07XG4gICAgdGltZS5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCBgJHtvcGVyYXRpbmdIb3Vyc1trZXldfSxgKTtcbiAgICByb3cuYXBwZW5kQ2hpbGQodGltZSk7XG4gICAgcm93LnNldEF0dHJpYnV0ZSgncm9sZScsICdyb3cnKTtcbiAgICBob3Vycy5hcHBlbmRDaGlsZChyb3cpO1xuICB9XG59O1xuXG5cbi8qKlxuICogQ3JlYXRlIGFsbCByZXZpZXdzIEhUTUwgYW5kIGFkZCB0aGVtIHRvIHRoZSB3ZWJwYWdlLlxuICovXG5jb25zdCBmaWxsUmV2aWV3c0hUTUwgPSAocmV2aWV3cyA9IHNlbGYucmVzdGF1cmFudC5yZXZpZXdzKSA9PiB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXZpZXdzLWNvbnRhaW5lcicpO1xuICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7XG4gIHRpdGxlLmlubmVySFRNTCA9ICdSZXZpZXdzJztcbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlKTtcblxuICBpZiAoIXJldmlld3MpIHtcbiAgICBjb25zdCBub1Jldmlld3MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgbm9SZXZpZXdzLmlubmVySFRNTCA9ICdObyByZXZpZXdzIHlldCEnO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChub1Jldmlld3MpO1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB1bCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXZpZXdzLWxpc3QnKTtcbiAgcmV2aWV3cy5mb3JFYWNoKHJldmlldyA9PiB7XG4gICAgdWwuYXBwZW5kQ2hpbGQoY3JlYXRlUmV2aWV3SFRNTChyZXZpZXcpKTtcbiAgfSk7XG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh1bCk7XG59O1xuXG4vKipcbiAqIENyZWF0ZSByZXZpZXcgSFRNTCBhbmQgYWRkIGl0IHRvIHRoZSB3ZWJwYWdlLlxuICovXG5jb25zdCBjcmVhdGVSZXZpZXdIVE1MID0gKHJldmlldykgPT4ge1xuICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIG5hbWUuY2xhc3NOYW1lID0gJ3VzZXJOYW1lJztcbiAgbmFtZS5pbm5lckhUTUwgPSByZXZpZXcubmFtZTtcbiAgbmFtZS5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCBgJHtyZXZpZXcubmFtZX0sYCk7XG4gIGxpLmFwcGVuZENoaWxkKG5hbWUpO1xuXG4gIGNvbnN0IGRhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIGRhdGUuY2xhc3NOYW1lID0gJ2RhdGVSZXZpZXcnO1xuICBkYXRlLmlubmVySFRNTCA9IHJldmlldy5kYXRlO1xuICBkYXRlLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsIGAke3Jldmlldy5kYXRlfSxgKTtcbiAgbGkuYXBwZW5kQ2hpbGQoZGF0ZSk7XG5cbiAgY29uc3QgcmF0aW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICBsZXQgc3RhcnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHJhdGluZy5jbGFzc05hbWUgPSAndXNlclJhdGluZyc7XG4gIHN0YXJzLmNsYXNzTmFtZSA9ICdyYXRpbmdTdGFycyc7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcmV2aWV3LnJhdGluZzsgaSsrKSB7XG4gICAgc3RhcnMuaW5uZXJIVE1MICs9ICfimIUnO1xuICB9XG4gIHN0YXJzLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsIGAke3Jldmlldy5yYXRpbmd9IHN0YXJzIG9uIDUsYCk7XG4gIHJhdGluZy5pbm5lckhUTUwgPSAnUmF0aW5nOiAnO1xuICByYXRpbmcuYXBwZW5kQ2hpbGQoc3RhcnMpO1xuICBsaS5hcHBlbmRDaGlsZChyYXRpbmcpO1xuXG4gIGNvbnN0IGNvbW1lbnRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICBjb21tZW50cy5jbGFzc05hbWUgPSAndXNlckNvbW1lbnRzJztcbiAgY29tbWVudHMuaW5uZXJIVE1MID0gcmV2aWV3LmNvbW1lbnRzO1xuICBsaS5hcHBlbmRDaGlsZChjb21tZW50cyk7XG5cbiAgbGkuc2V0QXR0cmlidXRlKCdyb2xlJywgJ2xpc3RpdGVtJyk7XG4gIGxpLnNldEF0dHJpYnV0ZSgnYXJpYS1zZXRzaXplJywgc2VsZi5yZXN0YXVyYW50LnJldmlld3MubGVuZ3RoKTtcbiAgbGkuc2V0QXR0cmlidXRlKCdhcmlhLXBvc2luc2V0Jywgc2VsZi5yZXN0YXVyYW50LnJldmlld3MuaW5kZXhPZihyZXZpZXcpKzEpO1xuICByZXR1cm4gbGk7XG59O1xuXG4vKipcbiAqIEFkZCByZXN0YXVyYW50IG5hbWUgdG8gdGhlIGJyZWFkY3J1bWIgbmF2aWdhdGlvbiBtZW51XG4gKi9cbmNvbnN0IGZpbGxCcmVhZGNydW1iID0gKHJlc3RhdXJhbnQgPSBzZWxmLnJlc3RhdXJhbnQpID0+IHtcbiAgY29uc3QgYnJlYWRjcnVtYiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdicmVhZGNydW1iJyk7XG4gIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgbGkuaW5uZXJIVE1MID0gYCAke3Jlc3RhdXJhbnQubmFtZX1gO1xuICBsaS5jbGFzc05hbWUgPSAnZm9udGF3ZXNvbWUtYXJyb3ctcmlnaHQnO1xuICBsaS5zZXRBdHRyaWJ1dGUoJ2FyaWEtY3VycmVudCcsICdwYWdlJyk7XG4gIGJyZWFkY3J1bWIuYXBwZW5kQ2hpbGQobGkpO1xufTtcblxuLyoqXG4gKiBHZXQgYSBwYXJhbWV0ZXIgYnkgbmFtZSBmcm9tIHBhZ2UgVVJMLlxuICovXG5jb25zdCBnZXRQYXJhbWV0ZXJCeU5hbWUgPSAobmFtZSwgdXJsKSA9PiB7XG4gIGlmICghdXJsKVxuICAgIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICBuYW1lID0gbmFtZS5yZXBsYWNlKC9bXFxbXFxdXS9nLCAnXFxcXCQmJyk7XG4gIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChgWz8mXSR7bmFtZX0oPShbXiYjXSopfCZ8I3wkKWApLFxuICAgIHJlc3VsdHMgPSByZWdleC5leGVjKHVybCk7XG4gIGlmICghcmVzdWx0cylcbiAgICByZXR1cm4gbnVsbDtcbiAgaWYgKCFyZXN1bHRzWzJdKVxuICAgIHJldHVybiAnJztcbiAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChyZXN1bHRzWzJdLnJlcGxhY2UoL1xcKy9nLCAnICcpKTtcbn07Il19
